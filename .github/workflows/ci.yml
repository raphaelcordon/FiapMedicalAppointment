name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Pull latest image
        run: docker pull ${{ secrets.DOCKER_REPOSITORY }}:latest || true
      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag ${{ secrets.DOCKER_REPOSITORY }}:${{ github.sha }} --cache-from ${{ secrets.DOCKER_REPOSITORY }}:latest
      - name: Push the Docker image
        run: |
          docker push ${{ secrets.DOCKER_REPOSITORY }}:${{ github.sha }}
          docker tag ${{ secrets.DOCKER_REPOSITORY }}:${{ github.sha }} ${{ secrets.DOCKER_REPOSITORY }}:latest
          docker push ${{ secrets.DOCKER_REPOSITORY }}:latest

  test:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run tests
        run: |
          echo "Run your .NET tests here"
          # Example: docker run --rm ${{ secrets.DOCKER_REPOSITORY }}:${{ github.sha }} dotnet test

  lint:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run linter
        run: |
          echo "Run your .NET format check here"
          # Example: docker run --rm ${{ secrets.DOCKER_REPOSITORY }}:${{ github.sha }} dotnet tool run dotnet-format -- --check

  deploy:
    needs: lint
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v2
      - name: Deploy to Digital Ocean
        run: |
          ssh -o StrictHostKeyChecking=no -i ${{ secrets.SSH_PRIVATE_KEY }} username@host 'docker pull ${{ secrets.DOCKER_REPOSITORY }}:latest && docker-compose -f docker-compose.deploy.yml up -d'
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
